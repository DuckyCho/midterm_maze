package maze.finder;

import java.util.ArrayList;

import maze.maze.Coordinate;
import maze.maze.CoordinateWithDirections;
import maze.maze.Maze;



public class FinderHistory {
	public int top = 0;
	public ArrayList<CoordinateWithDirections> alreadyVisited;
	
	public FinderHistory(Maze m1){
		top = 0;
		alreadyVisited = new ArrayList<CoordinateWithDirections>();
	}
	
	
	public void pushLocation(CoordinateWithDirections visited){
		
		if(visited instanceof CoordinateWithDirections){
			alreadyVisited.add((CoordinateWithDirections)visited);
			top++;
		}
		else{
			alreadyVisited.add(Coordinate.toCoordianteWithDirections(visited));
			top++;
		}
	}
	
	
	public CoordinateWithDirections popLocation(){
		CoordinateWithDirections previousLocation = this.alreadyVisited.get(top-1).clone();
		
		alreadyVisited.remove(top-1);
		top--;
		return previousLocation;
	}
	
	public CoordinateWithDirections getRecentLocation(){
		CoordinateWithDirections recentLocation = new CoordinateWithDirections(this.alreadyVisited.get(top-1));
		return recentLocation;
	}
	
	public boolean isEmpty(){
		return this.alreadyVisited.isEmpty();
	}

}
